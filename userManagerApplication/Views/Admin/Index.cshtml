@using Microsoft.AspNetCore.Mvc.Localization;
@using userManagerAplication.Models;

@inject IViewLocalizer Localizer

@model List<UserModel>

@{
    ViewData["Title"] = @Localizer["Title"];
}

<link rel="stylesheet" href="~/css/adminPanel.css" asp-append-version="true" />

<div>

    <h3>@Localizer["Title"]</h3>

    <div class="row tableAdmin">
        <div class="panelbtns">
            <button class="btn btn-success" id="btnCreateUser">@Localizer["CreateUser"]</button>
        </div>
        <div class="table-responsive">
            <table id="userTable" class="table table-striped table-hover dt-responsive display nowrap" width="100%" cellspacing="0">
                <thead id="theadUser">
                    <tr>
                        <th>IdUser</th>
                        <th>Name</th>
                        <th>Last name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Role</th>
                        <th>Date admission</th>
                        <th>Final date</th>
                        <th>Status</th>
                        <th>Options</th>
                    </tr>
                </thead>
                <tbody id="tbodyUser">
                    

                    @if (ViewBag.users != null)
                    {
                        @foreach (var user in ViewBag.users)
                        {
                            <tr data-id="@user.IdUser">
                                <td>@user.IdUser</td>
                                <td>@user.Name</td>
                                <td>@user.LastName</td>
                                <td>@user.Email</td>
                                <td>@user.Phone</td>
                                <td>@user.RoleName</td>
                                <td>@user.DateAdmision</td>
                                <td>@user.InactiveDate</td>
                                <td id="statusTd">@user.StatusName</td>
                                <td>
                                    @*<button type="button" class="btn btn-primary" data-id="@user.IdUser" id="btnUpdateUser" onclick="openModalUpdateUser(@user.IdUser)">Edit</button>
                            <button onclick="inactiveActiveUser(@user.IdUser, @user.Status)" class="btn btn-info" id="btnInacivateUser">@((user.Status == "Inactive") ? "Inactive" : "Active")</button>*@
                                </td>
                            </tr>

                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

<div id="updateUserModal" tabindex="-1" role="dialog" class="modal fade" aria-labelledby="updateUserModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @await Html.PartialAsync("~/Views/Modals/UpdateUserModal.cshtml");            
        </div>
    </div>
</div>

<!-- Modal user pages -->
<div id="userPagesModal" tabindex="-" role="dialog" class="modal fade" aria-labelledby="userPagesModal" aria-hidden="false">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            @await Html.PartialAsync("~/Views/Modals/UserPagesModal.cshtml");
        </div>
    </div>
</div>

<div>
    
</div>

@* <button id="btnAP"></button> *@

<script src="~/js/adminPanel.js" asp-append-version="true"></script>

@section Scripts {
    
}



